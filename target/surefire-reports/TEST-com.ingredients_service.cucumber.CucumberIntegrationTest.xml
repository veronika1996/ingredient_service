<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="com.ingredients_service.cucumber.CucumberIntegrationTest" time="3.977" tests="14" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/veronika/Projects/MASTER/mealplan-app/ingredients_service/target/test-classes:/Users/veronika/Projects/MASTER/mealplan-app/ingredients_service/target/classes:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.4.1/spring-boot-starter-data-jpa-3.4.1.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-starter/3.4.1/spring-boot-starter-3.4.1.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot/3.4.1/spring-boot-3.4.1.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.4.1/spring-boot-autoconfigure-3.4.1.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.4.1/spring-boot-starter-logging-3.4.1.jar:/Users/veronika/.m2/repository/ch/qos/logback/logback-classic/1.5.12/logback-classic-1.5.12.jar:/Users/veronika/.m2/repository/ch/qos/logback/logback-core/1.5.12/logback-core-1.5.12.jar:/Users/veronika/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.3/log4j-to-slf4j-2.24.3.jar:/Users/veronika/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.3/log4j-api-2.24.3.jar:/Users/veronika/.m2/repository/org/slf4j/jul-to-slf4j/2.0.16/jul-to-slf4j-2.0.16.jar:/Users/veronika/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/veronika/.m2/repository/org/yaml/snakeyaml/2.3/snakeyaml-2.3.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.4.1/spring-boot-starter-jdbc-3.4.1.jar:/Users/veronika/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar:/Users/veronika/.m2/repository/org/springframework/spring-jdbc/6.2.1/spring-jdbc-6.2.1.jar:/Users/veronika/.m2/repository/org/hibernate/orm/hibernate-core/6.6.4.Final/hibernate-core-6.6.4.Final.jar:/Users/veronika/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/veronika/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/veronika/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/Users/veronika/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/Users/veronika/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/Users/veronika/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/Users/veronika/.m2/repository/net/bytebuddy/byte-buddy/1.15.11/byte-buddy-1.15.11.jar:/Users/veronika/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/veronika/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/veronika/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/veronika/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/veronika/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/veronika/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/veronika/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/veronika/.m2/repository/org/springframework/data/spring-data-jpa/3.4.1/spring-data-jpa-3.4.1.jar:/Users/veronika/.m2/repository/org/springframework/data/spring-data-commons/3.4.1/spring-data-commons-3.4.1.jar:/Users/veronika/.m2/repository/org/springframework/spring-orm/6.2.1/spring-orm-6.2.1.jar:/Users/veronika/.m2/repository/org/springframework/spring-context/6.2.1/spring-context-6.2.1.jar:/Users/veronika/.m2/repository/org/springframework/spring-tx/6.2.1/spring-tx-6.2.1.jar:/Users/veronika/.m2/repository/org/springframework/spring-beans/6.2.1/spring-beans-6.2.1.jar:/Users/veronika/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/Users/veronika/.m2/repository/org/springframework/spring-aspects/6.2.1/spring-aspects-6.2.1.jar:/Users/veronika/.m2/repository/org/aspectj/aspectjweaver/1.9.22.1/aspectjweaver-1.9.22.1.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.4.1/spring-boot-starter-web-3.4.1.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.4.1/spring-boot-starter-json-3.4.1.jar:/Users/veronika/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.2/jackson-databind-2.18.2.jar:/Users/veronika/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.2/jackson-annotations-2.18.2.jar:/Users/veronika/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.2/jackson-core-2.18.2.jar:/Users/veronika/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.18.2/jackson-datatype-jdk8-2.18.2.jar:/Users/veronika/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.18.2/jackson-datatype-jsr310-2.18.2.jar:/Users/veronika/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.18.2/jackson-module-parameter-names-2.18.2.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.4.1/spring-boot-starter-tomcat-3.4.1.jar:/Users/veronika/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.34/tomcat-embed-core-10.1.34.jar:/Users/veronika/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.34/tomcat-embed-websocket-10.1.34.jar:/Users/veronika/.m2/repository/org/springframework/spring-web/6.2.1/spring-web-6.2.1.jar:/Users/veronika/.m2/repository/io/micrometer/micrometer-observation/1.14.2/micrometer-observation-1.14.2.jar:/Users/veronika/.m2/repository/io/micrometer/micrometer-commons/1.14.2/micrometer-commons-1.14.2.jar:/Users/veronika/.m2/repository/org/springframework/spring-webmvc/6.2.1/spring-webmvc-6.2.1.jar:/Users/veronika/.m2/repository/org/springframework/spring-expression/6.2.1/spring-expression-6.2.1.jar:/Users/veronika/.m2/repository/org/postgresql/postgresql/42.7.4/postgresql-42.7.4.jar:/Users/veronika/.m2/repository/org/checkerframework/checker-qual/3.42.0/checker-qual-3.42.0.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.4.1/spring-boot-starter-test-3.4.1.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-test/3.4.1/spring-boot-test-3.4.1.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.4.1/spring-boot-test-autoconfigure-3.4.1.jar:/Users/veronika/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/veronika/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/veronika/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/veronika/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/Users/veronika/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/Users/veronika/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/Users/veronika/.m2/repository/org/assertj/assertj-core/3.26.3/assertj-core-3.26.3.jar:/Users/veronika/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/Users/veronika/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/veronika/.m2/repository/org/junit/jupiter/junit-jupiter/5.11.4/junit-jupiter-5.11.4.jar:/Users/veronika/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.11.4/junit-jupiter-api-5.11.4.jar:/Users/veronika/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.11.4/junit-jupiter-params-5.11.4.jar:/Users/veronika/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.11.4/junit-jupiter-engine-5.11.4.jar:/Users/veronika/.m2/repository/org/mockito/mockito-core/5.14.2/mockito-core-5.14.2.jar:/Users/veronika/.m2/repository/net/bytebuddy/byte-buddy-agent/1.15.11/byte-buddy-agent-1.15.11.jar:/Users/veronika/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/veronika/.m2/repository/org/mockito/mockito-junit-jupiter/5.14.2/mockito-junit-jupiter-5.14.2.jar:/Users/veronika/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/Users/veronika/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/veronika/.m2/repository/org/springframework/spring-core/6.2.1/spring-core-6.2.1.jar:/Users/veronika/.m2/repository/org/springframework/spring-jcl/6.2.1/spring-jcl-6.2.1.jar:/Users/veronika/.m2/repository/org/springframework/spring-test/6.2.1/spring-test-6.2.1.jar:/Users/veronika/.m2/repository/org/xmlunit/xmlunit-core/2.10.0/xmlunit-core-2.10.0.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.4.1/spring-boot-starter-security-3.4.1.jar:/Users/veronika/.m2/repository/org/springframework/spring-aop/6.2.1/spring-aop-6.2.1.jar:/Users/veronika/.m2/repository/org/springframework/security/spring-security-config/6.4.2/spring-security-config-6.4.2.jar:/Users/veronika/.m2/repository/org/springframework/security/spring-security-web/6.4.2/spring-security-web-6.4.2.jar:/Users/veronika/.m2/repository/io/cucumber/cucumber-java/7.20.1/cucumber-java-7.20.1.jar:/Users/veronika/.m2/repository/io/cucumber/cucumber-core/7.20.1/cucumber-core-7.20.1.jar:/Users/veronika/.m2/repository/io/cucumber/cucumber-gherkin/7.20.1/cucumber-gherkin-7.20.1.jar:/Users/veronika/.m2/repository/io/cucumber/cucumber-gherkin-messages/7.20.1/cucumber-gherkin-messages-7.20.1.jar:/Users/veronika/.m2/repository/io/cucumber/gherkin/28.0.0/gherkin-28.0.0.jar:/Users/veronika/.m2/repository/io/cucumber/messages/24.1.0/messages-24.1.0.jar:/Users/veronika/.m2/repository/io/cucumber/testng-xml-formatter/0.2.0/testng-xml-formatter-0.2.0.jar:/Users/veronika/.m2/repository/io/cucumber/query/12.2.0/query-12.2.0.jar:/Users/veronika/.m2/repository/io/cucumber/tag-expressions/6.1.0/tag-expressions-6.1.0.jar:/Users/veronika/.m2/repository/io/cucumber/cucumber-expressions/17.1.0/cucumber-expressions-17.1.0.jar:/Users/veronika/.m2/repository/io/cucumber/datatable/7.20.1/datatable-7.20.1.jar:/Users/veronika/.m2/repository/io/cucumber/cucumber-plugin/7.20.1/cucumber-plugin-7.20.1.jar:/Users/veronika/.m2/repository/io/cucumber/docstring/7.20.1/docstring-7.20.1.jar:/Users/veronika/.m2/repository/io/cucumber/html-formatter/21.7.0/html-formatter-21.7.0.jar:/Users/veronika/.m2/repository/io/cucumber/junit-xml-formatter/0.5.0/junit-xml-formatter-0.5.0.jar:/Users/veronika/.m2/repository/io/cucumber/ci-environment/10.0.1/ci-environment-10.0.1.jar:/Users/veronika/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/veronika/.m2/repository/io/cucumber/cucumber-junit/7.20.1/cucumber-junit-7.20.1.jar:/Users/veronika/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/veronika/.m2/repository/org/hamcrest/hamcrest-core/2.2/hamcrest-core-2.2.jar:/Users/veronika/.m2/repository/io/cucumber/cucumber-spring/7.20.1/cucumber-spring-7.20.1.jar:/Users/veronika/.m2/repository/org/springframework/security/spring-security-test/5.8.1/spring-security-test-5.8.1.jar:/Users/veronika/.m2/repository/org/springframework/security/spring-security-core/6.4.2/spring-security-core-6.4.2.jar:/Users/veronika/.m2/repository/org/springframework/security/spring-security-crypto/6.4.2/spring-security-crypto-6.4.2.jar:/Users/veronika/.m2/repository/org/junit/vintage/junit-vintage-engine/5.11.4/junit-vintage-engine-5.11.4.jar:/Users/veronika/.m2/repository/org/junit/platform/junit-platform-engine/1.11.4/junit-platform-engine-1.11.4.jar:/Users/veronika/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/veronika/.m2/repository/org/junit/platform/junit-platform-commons/1.11.4/junit-platform-commons-1.11.4.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.4.1/spring-boot-starter-validation-3.4.1.jar:/Users/veronika/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.34/tomcat-embed-el-10.1.34.jar:/Users/veronika/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.2.Final/hibernate-validator-8.0.2.Final.jar:/Users/veronika/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/veronika/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.8.4/springdoc-openapi-starter-webmvc-ui-2.8.4.jar:/Users/veronika/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.8.4/springdoc-openapi-starter-webmvc-api-2.8.4.jar:/Users/veronika/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.8.4/springdoc-openapi-starter-common-2.8.4.jar:/Users/veronika/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.28/swagger-core-jakarta-2.2.28.jar:/Users/veronika/.m2/repository/org/apache/commons/commons-lang3/3.17.0/commons-lang3-3.17.0.jar:/Users/veronika/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.28/swagger-annotations-jakarta-2.2.28.jar:/Users/veronika/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.28/swagger-models-jakarta-2.2.28.jar:/Users/veronika/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.18.2/jackson-dataformat-yaml-2.18.2.jar:/Users/veronika/.m2/repository/org/webjars/swagger-ui/5.18.2/swagger-ui-5.18.2.jar:/Users/veronika/.m2/repository/org/webjars/webjars-locator-lite/1.0.1/webjars-locator-lite-1.0.1.jar:/Users/veronika/.m2/repository/org/jspecify/jspecify/1.0.0/jspecify-1.0.0.jar:"/>
    <property name="java.vm.vendor" value="Homebrew"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="catalina.useNaming" value="false"/>
    <property name="user.timezone" value="Europe/Belgrade"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="APPLICATION_NAME" value="Ingredients app"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="/opt/homebrew/Cellar/openjdk@17/17.0.13/libexec/openjdk.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/veronika/Projects/MASTER/mealplan-app/ingredients_service/target/surefire/surefirebooter-20250217213923600_3.jar /Users/veronika/Projects/MASTER/mealplan-app/ingredients_service/target/surefire 2025-02-17T21-39-23_565-jvmRun1 surefire-20250217213923600_1tmp surefire_0-20250217213923600_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/veronika/Projects/MASTER/mealplan-app/ingredients_service/target/test-classes:/Users/veronika/Projects/MASTER/mealplan-app/ingredients_service/target/classes:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.4.1/spring-boot-starter-data-jpa-3.4.1.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-starter/3.4.1/spring-boot-starter-3.4.1.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot/3.4.1/spring-boot-3.4.1.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.4.1/spring-boot-autoconfigure-3.4.1.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.4.1/spring-boot-starter-logging-3.4.1.jar:/Users/veronika/.m2/repository/ch/qos/logback/logback-classic/1.5.12/logback-classic-1.5.12.jar:/Users/veronika/.m2/repository/ch/qos/logback/logback-core/1.5.12/logback-core-1.5.12.jar:/Users/veronika/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.3/log4j-to-slf4j-2.24.3.jar:/Users/veronika/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.3/log4j-api-2.24.3.jar:/Users/veronika/.m2/repository/org/slf4j/jul-to-slf4j/2.0.16/jul-to-slf4j-2.0.16.jar:/Users/veronika/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/veronika/.m2/repository/org/yaml/snakeyaml/2.3/snakeyaml-2.3.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.4.1/spring-boot-starter-jdbc-3.4.1.jar:/Users/veronika/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar:/Users/veronika/.m2/repository/org/springframework/spring-jdbc/6.2.1/spring-jdbc-6.2.1.jar:/Users/veronika/.m2/repository/org/hibernate/orm/hibernate-core/6.6.4.Final/hibernate-core-6.6.4.Final.jar:/Users/veronika/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/veronika/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/veronika/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/Users/veronika/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/Users/veronika/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/Users/veronika/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/Users/veronika/.m2/repository/net/bytebuddy/byte-buddy/1.15.11/byte-buddy-1.15.11.jar:/Users/veronika/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/veronika/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/veronika/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/veronika/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/veronika/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/veronika/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/veronika/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/veronika/.m2/repository/org/springframework/data/spring-data-jpa/3.4.1/spring-data-jpa-3.4.1.jar:/Users/veronika/.m2/repository/org/springframework/data/spring-data-commons/3.4.1/spring-data-commons-3.4.1.jar:/Users/veronika/.m2/repository/org/springframework/spring-orm/6.2.1/spring-orm-6.2.1.jar:/Users/veronika/.m2/repository/org/springframework/spring-context/6.2.1/spring-context-6.2.1.jar:/Users/veronika/.m2/repository/org/springframework/spring-tx/6.2.1/spring-tx-6.2.1.jar:/Users/veronika/.m2/repository/org/springframework/spring-beans/6.2.1/spring-beans-6.2.1.jar:/Users/veronika/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/Users/veronika/.m2/repository/org/springframework/spring-aspects/6.2.1/spring-aspects-6.2.1.jar:/Users/veronika/.m2/repository/org/aspectj/aspectjweaver/1.9.22.1/aspectjweaver-1.9.22.1.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.4.1/spring-boot-starter-web-3.4.1.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.4.1/spring-boot-starter-json-3.4.1.jar:/Users/veronika/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.2/jackson-databind-2.18.2.jar:/Users/veronika/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.2/jackson-annotations-2.18.2.jar:/Users/veronika/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.2/jackson-core-2.18.2.jar:/Users/veronika/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.18.2/jackson-datatype-jdk8-2.18.2.jar:/Users/veronika/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.18.2/jackson-datatype-jsr310-2.18.2.jar:/Users/veronika/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.18.2/jackson-module-parameter-names-2.18.2.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.4.1/spring-boot-starter-tomcat-3.4.1.jar:/Users/veronika/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.34/tomcat-embed-core-10.1.34.jar:/Users/veronika/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.34/tomcat-embed-websocket-10.1.34.jar:/Users/veronika/.m2/repository/org/springframework/spring-web/6.2.1/spring-web-6.2.1.jar:/Users/veronika/.m2/repository/io/micrometer/micrometer-observation/1.14.2/micrometer-observation-1.14.2.jar:/Users/veronika/.m2/repository/io/micrometer/micrometer-commons/1.14.2/micrometer-commons-1.14.2.jar:/Users/veronika/.m2/repository/org/springframework/spring-webmvc/6.2.1/spring-webmvc-6.2.1.jar:/Users/veronika/.m2/repository/org/springframework/spring-expression/6.2.1/spring-expression-6.2.1.jar:/Users/veronika/.m2/repository/org/postgresql/postgresql/42.7.4/postgresql-42.7.4.jar:/Users/veronika/.m2/repository/org/checkerframework/checker-qual/3.42.0/checker-qual-3.42.0.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.4.1/spring-boot-starter-test-3.4.1.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-test/3.4.1/spring-boot-test-3.4.1.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.4.1/spring-boot-test-autoconfigure-3.4.1.jar:/Users/veronika/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/veronika/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/veronika/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/veronika/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/Users/veronika/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/Users/veronika/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/Users/veronika/.m2/repository/org/assertj/assertj-core/3.26.3/assertj-core-3.26.3.jar:/Users/veronika/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/Users/veronika/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/veronika/.m2/repository/org/junit/jupiter/junit-jupiter/5.11.4/junit-jupiter-5.11.4.jar:/Users/veronika/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.11.4/junit-jupiter-api-5.11.4.jar:/Users/veronika/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.11.4/junit-jupiter-params-5.11.4.jar:/Users/veronika/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.11.4/junit-jupiter-engine-5.11.4.jar:/Users/veronika/.m2/repository/org/mockito/mockito-core/5.14.2/mockito-core-5.14.2.jar:/Users/veronika/.m2/repository/net/bytebuddy/byte-buddy-agent/1.15.11/byte-buddy-agent-1.15.11.jar:/Users/veronika/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/veronika/.m2/repository/org/mockito/mockito-junit-jupiter/5.14.2/mockito-junit-jupiter-5.14.2.jar:/Users/veronika/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/Users/veronika/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/veronika/.m2/repository/org/springframework/spring-core/6.2.1/spring-core-6.2.1.jar:/Users/veronika/.m2/repository/org/springframework/spring-jcl/6.2.1/spring-jcl-6.2.1.jar:/Users/veronika/.m2/repository/org/springframework/spring-test/6.2.1/spring-test-6.2.1.jar:/Users/veronika/.m2/repository/org/xmlunit/xmlunit-core/2.10.0/xmlunit-core-2.10.0.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.4.1/spring-boot-starter-security-3.4.1.jar:/Users/veronika/.m2/repository/org/springframework/spring-aop/6.2.1/spring-aop-6.2.1.jar:/Users/veronika/.m2/repository/org/springframework/security/spring-security-config/6.4.2/spring-security-config-6.4.2.jar:/Users/veronika/.m2/repository/org/springframework/security/spring-security-web/6.4.2/spring-security-web-6.4.2.jar:/Users/veronika/.m2/repository/io/cucumber/cucumber-java/7.20.1/cucumber-java-7.20.1.jar:/Users/veronika/.m2/repository/io/cucumber/cucumber-core/7.20.1/cucumber-core-7.20.1.jar:/Users/veronika/.m2/repository/io/cucumber/cucumber-gherkin/7.20.1/cucumber-gherkin-7.20.1.jar:/Users/veronika/.m2/repository/io/cucumber/cucumber-gherkin-messages/7.20.1/cucumber-gherkin-messages-7.20.1.jar:/Users/veronika/.m2/repository/io/cucumber/gherkin/28.0.0/gherkin-28.0.0.jar:/Users/veronika/.m2/repository/io/cucumber/messages/24.1.0/messages-24.1.0.jar:/Users/veronika/.m2/repository/io/cucumber/testng-xml-formatter/0.2.0/testng-xml-formatter-0.2.0.jar:/Users/veronika/.m2/repository/io/cucumber/query/12.2.0/query-12.2.0.jar:/Users/veronika/.m2/repository/io/cucumber/tag-expressions/6.1.0/tag-expressions-6.1.0.jar:/Users/veronika/.m2/repository/io/cucumber/cucumber-expressions/17.1.0/cucumber-expressions-17.1.0.jar:/Users/veronika/.m2/repository/io/cucumber/datatable/7.20.1/datatable-7.20.1.jar:/Users/veronika/.m2/repository/io/cucumber/cucumber-plugin/7.20.1/cucumber-plugin-7.20.1.jar:/Users/veronika/.m2/repository/io/cucumber/docstring/7.20.1/docstring-7.20.1.jar:/Users/veronika/.m2/repository/io/cucumber/html-formatter/21.7.0/html-formatter-21.7.0.jar:/Users/veronika/.m2/repository/io/cucumber/junit-xml-formatter/0.5.0/junit-xml-formatter-0.5.0.jar:/Users/veronika/.m2/repository/io/cucumber/ci-environment/10.0.1/ci-environment-10.0.1.jar:/Users/veronika/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/veronika/.m2/repository/io/cucumber/cucumber-junit/7.20.1/cucumber-junit-7.20.1.jar:/Users/veronika/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/veronika/.m2/repository/org/hamcrest/hamcrest-core/2.2/hamcrest-core-2.2.jar:/Users/veronika/.m2/repository/io/cucumber/cucumber-spring/7.20.1/cucumber-spring-7.20.1.jar:/Users/veronika/.m2/repository/org/springframework/security/spring-security-test/5.8.1/spring-security-test-5.8.1.jar:/Users/veronika/.m2/repository/org/springframework/security/spring-security-core/6.4.2/spring-security-core-6.4.2.jar:/Users/veronika/.m2/repository/org/springframework/security/spring-security-crypto/6.4.2/spring-security-crypto-6.4.2.jar:/Users/veronika/.m2/repository/org/junit/vintage/junit-vintage-engine/5.11.4/junit-vintage-engine-5.11.4.jar:/Users/veronika/.m2/repository/org/junit/platform/junit-platform-engine/1.11.4/junit-platform-engine-1.11.4.jar:/Users/veronika/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/veronika/.m2/repository/org/junit/platform/junit-platform-commons/1.11.4/junit-platform-commons-1.11.4.jar:/Users/veronika/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.4.1/spring-boot-starter-validation-3.4.1.jar:/Users/veronika/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.34/tomcat-embed-el-10.1.34.jar:/Users/veronika/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.2.Final/hibernate-validator-8.0.2.Final.jar:/Users/veronika/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/veronika/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.8.4/springdoc-openapi-starter-webmvc-ui-2.8.4.jar:/Users/veronika/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.8.4/springdoc-openapi-starter-webmvc-api-2.8.4.jar:/Users/veronika/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.8.4/springdoc-openapi-starter-common-2.8.4.jar:/Users/veronika/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.28/swagger-core-jakarta-2.2.28.jar:/Users/veronika/.m2/repository/org/apache/commons/commons-lang3/3.17.0/commons-lang3-3.17.0.jar:/Users/veronika/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.28/swagger-annotations-jakarta-2.2.28.jar:/Users/veronika/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.28/swagger-models-jakarta-2.2.28.jar:/Users/veronika/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.18.2/jackson-dataformat-yaml-2.18.2.jar:/Users/veronika/.m2/repository/org/webjars/swagger-ui/5.18.2/swagger-ui-5.18.2.jar:/Users/veronika/.m2/repository/org/webjars/webjars-locator-lite/1.0.1/webjars-locator-lite-1.0.1.jar:/Users/veronika/.m2/repository/org/jspecify/jspecify/1.0.0/jspecify-1.0.0.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/veronika"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-10-15"/>
    <property name="java.home" value="/opt/homebrew/Cellar/openjdk@17/17.0.13/libexec/openjdk.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/veronika/Projects/MASTER/mealplan-app/ingredients_service"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="/Users/veronika/Projects/MASTER/mealplan-app/ingredients_service/target/surefire/surefirebooter-20250217213923600_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.13+0"/>
    <property name="user.name" value="veronika"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="14.3"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Homebrew"/>
    <property name="localRepository" value="/Users/veronika/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="java.io.tmpdir" value="/var/folders/yw/70csm0tx7fj4xq10qxd_p_8h0000gn/T/"/>
    <property name="catalina.home" value="/private/var/folders/yw/70csm0tx7fj4xq10qxd_p_8h0000gn/T/tomcat.8083.4831144049885473328"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="17.0.13"/>
    <property name="user.dir" value="/Users/veronika/Projects/MASTER/mealplan-app/ingredients_service"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="19202"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="catalina.base" value="/private/var/folders/yw/70csm0tx7fj4xq10qxd_p_8h0000gn/T/tomcat.8083.4831144049885473328"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/veronika/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Homebrew"/>
    <property name="java.vm.version" value="17.0.13+0"/>
    <property name="java.specification.maintenance.version" value="1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="java.class.version" value="61.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[Ingredients app] "/>
  </properties>
  <testcase name="Successfully create a new ingredient" classname="Create a new ingredient" time="3.523">
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-02-17T21:39:24.965+01:00  INFO 19202 --- [Ingredients app] [           main] c.i.cucumber.glue.SpringIntegrationTest  : Starting SpringIntegrationTest using Java 17.0.13 with PID 19202 (started by veronika in /Users/veronika/Projects/MASTER/mealplan-app/ingredients_service)
2025-02-17T21:39:24.966+01:00  INFO 19202 --- [Ingredients app] [           main] c.i.cucumber.glue.SpringIntegrationTest  : The following 1 profile is active: "test"
2025-02-17T21:39:25.432+01:00  INFO 19202 --- [Ingredients app] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-17T21:39:25.459+01:00  INFO 19202 --- [Ingredients app] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 22 ms. Found 1 JPA repository interface.
2025-02-17T21:39:25.749+01:00  INFO 19202 --- [Ingredients app] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8083 (http)
2025-02-17T21:39:25.759+01:00  INFO 19202 --- [Ingredients app] [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-02-17T21:39:25.759+01:00  INFO 19202 --- [Ingredients app] [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-17T21:39:25.788+01:00  INFO 19202 --- [Ingredients app] [           main] o.a.c.c.C.[.[localhost].[/meal_plan]     : Initializing Spring embedded WebApplicationContext
2025-02-17T21:39:25.788+01:00  INFO 19202 --- [Ingredients app] [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 808 ms
2025-02-17T21:39:25.879+01:00  INFO 19202 --- [Ingredients app] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-17T21:39:25.932+01:00  INFO 19202 --- [Ingredients app] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.4.Final
2025-02-17T21:39:25.955+01:00  INFO 19202 --- [Ingredients app] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-02-17T21:39:26.119+01:00  INFO 19202 --- [Ingredients app] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-17T21:39:26.137+01:00  INFO 19202 --- [Ingredients app] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-02-17T21:39:26.240+01:00  INFO 19202 --- [Ingredients app] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7bfd21ca
2025-02-17T21:39:26.240+01:00  INFO 19202 --- [Ingredients app] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-02-17T21:39:26.300+01:00  INFO 19202 --- [Ingredients app] [           main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.15
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-02-17T21:39:26.780+01:00  INFO 19202 --- [Ingredients app] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-17T21:39:26.818+01:00  INFO 19202 --- [Ingredients app] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-17T21:39:27.056+01:00  WARN 19202 --- [Ingredients app] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-02-17T21:39:27.068+01:00  WARN 19202 --- [Ingredients app] [           main] .s.s.UserDetailsServiceAutoConfiguration : 

Using generated security password: c8dacb72-534b-4901-866b-9c3fcb4e83be

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-02-17T21:39:27.083+01:00  INFO 19202 --- [Ingredients app] [           main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-02-17T21:39:27.503+01:00  INFO 19202 --- [Ingredients app] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8083 (http) with context path '/meal_plan'
2025-02-17T21:39:27.508+01:00  INFO 19202 --- [Ingredients app] [           main] c.i.cucumber.glue.SpringIntegrationTest  : Started SpringIntegrationTest in 2.772 seconds (process running for 3.868)

@create
Scenario: Successfully create a new ingredient                                                                             &amp#27;[90m# src/test/java/resources/features/create_ingredient.feature:7&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0
Hibernate: delete from app_ingredient where id=?
Hibernate: insert into app_ingredient (added_by,calorie_number,category,name) values (?,?,?,?)
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0 where ie1_0.name=?
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe system is initialized&amp#27;[0m                                                                                          &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theSystemIsInitialized()&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe ingredient data in JSON file &amp#27;[0m&amp#27;[32m&amp#27;[1m"/requests/create_ingredient_request.json"&amp#27;[0m                                        &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theIngredientDataInJsonFile(java.lang.String)&amp#27;[0m
2025-02-17T21:39:28.034+01:00  INFO 19202 --- [Ingredients app] [nio-8083-exec-1] o.a.c.c.C.[.[localhost].[/meal_plan]     : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-17T21:39:28.035+01:00  INFO 19202 --- [Ingredients app] [nio-8083-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-02-17T21:39:28.035+01:00  INFO 19202 --- [Ingredients app] [nio-8083-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0 where ie1_0.name=?
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0 where ie1_0.name=?
Hibernate: insert into app_ingredient (added_by,calorie_number,category,name) values (?,?,?,?)
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI send a POST request to &amp#27;[0m&amp#27;[32m&amp#27;[1m"/ingredients"&amp#27;[0m                                                                             &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iSendAPostRequestTo(java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mI should receive a &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m&amp#27;[32m response&amp#27;[0m                                                                                     &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iShouldReceiveAResponse(int)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mthe ingredient response should be like the ingredient data in JSON file &amp#27;[0m&amp#27;[32m&amp#27;[1m"/responses/create_ingredient_response.json"&amp#27;[0m &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theIngredientResponseShouldBeLikeTheIngredientDataInJsonFile(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Create ingredient with missing name" classname="Create a new ingredient" time="0.031">
    <system-out><![CDATA[
@error
Scenario: Create ingredient with missing name                                                    &amp#27;[90m# src/test/java/resources/features/create_ingredient.feature:14&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0
Hibernate: delete from app_ingredient where id=?
Hibernate: delete from app_ingredient where id=?
Hibernate: insert into app_ingredient (added_by,calorie_number,category,name) values (?,?,?,?)
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0 where ie1_0.name=?
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe system is initialized&amp#27;[0m                                                                &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theSystemIsInitialized()&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe ingredient data in JSON file &amp#27;[0m&amp#27;[32m&amp#27;[1m"/requests/create_ingredient_request_missing_name.json"&amp#27;[0m &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theIngredientDataInJsonFile(java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI send a POST request to &amp#27;[0m&amp#27;[32m&amp#27;[1m"/ingredients"&amp#27;[0m                                                   &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iSendAPostRequestTo(java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mI should receive a &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m&amp#27;[32m response&amp#27;[0m                                                           &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iShouldReceiveAResponse(int)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mthe response should contain error message &amp#27;[0m&amp#27;[32m&amp#27;[1m"Name of ingredient cannot be empty"&amp#27;[0m             &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theResponseShouldContainErrorMessage(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Create ingredient with negative calorie number" classname="Create a new ingredient" time="0.019">
    <system-out><![CDATA[
@error
Scenario: Create ingredient with negative calorie number                                              &amp#27;[90m# src/test/java/resources/features/create_ingredient.feature:21&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0
Hibernate: delete from app_ingredient where id=?
Hibernate: insert into app_ingredient (added_by,calorie_number,category,name) values (?,?,?,?)
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0 where ie1_0.name=?
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe system is initialized&amp#27;[0m                                                                     &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theSystemIsInitialized()&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe ingredient data in JSON file &amp#27;[0m&amp#27;[32m&amp#27;[1m"/requests/create_ingredient_request_negative_calories.json"&amp#27;[0m &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theIngredientDataInJsonFile(java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI send a POST request to &amp#27;[0m&amp#27;[32m&amp#27;[1m"/ingredients"&amp#27;[0m                                                        &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iSendAPostRequestTo(java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mI should receive a &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m&amp#27;[32m response&amp#27;[0m                                                                &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iShouldReceiveAResponse(int)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mthe response should contain error message &amp#27;[0m&amp#27;[32m&amp#27;[1m"Calorie number needs to be positive value"&amp#27;[0m           &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theResponseShouldContainErrorMessage(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Create ingredient with missing calorie number" classname="Create a new ingredient" time="0.02">
    <system-out><![CDATA[
@error
Scenario: Create ingredient with missing calorie number                                              &amp#27;[90m# src/test/java/resources/features/create_ingredient.feature:28&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0
Hibernate: delete from app_ingredient where id=?
Hibernate: insert into app_ingredient (added_by,calorie_number,category,name) values (?,?,?,?)
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0 where ie1_0.name=?
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe system is initialized&amp#27;[0m                                                                    &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theSystemIsInitialized()&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe ingredient data in JSON file &amp#27;[0m&amp#27;[32m&amp#27;[1m"/requests/create_ingredient_request_missing_calories.json"&amp#27;[0m &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theIngredientDataInJsonFile(java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI send a POST request to &amp#27;[0m&amp#27;[32m&amp#27;[1m"/ingredients"&amp#27;[0m                                                       &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iSendAPostRequestTo(java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mI should receive a &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m&amp#27;[32m response&amp#27;[0m                                                               &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iShouldReceiveAResponse(int)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mthe response should contain error message &amp#27;[0m&amp#27;[32m&amp#27;[1m"Calorie number needs to be positive value"&amp#27;[0m          &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theResponseShouldContainErrorMessage(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Successfully delete an ingredient" classname="Delete an ingredient" time="0.028">
    <system-out><![CDATA[
@delete
Scenario: Successfully delete an ingredient                     &amp#27;[90m# src/test/java/resources/features/delete_ingredient.feature:7&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0
Hibernate: delete from app_ingredient where id=?
Hibernate: insert into app_ingredient (added_by,calorie_number,category,name) values (?,?,?,?)
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0 where ie1_0.name=?
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe system is initialized&amp#27;[0m                               &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theSystemIsInitialized()&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0 where ie1_0.name=?
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0 where ie1_0.name=?
Hibernate: delete from app_ingredient where id=?
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI send a DELETE request to &amp#27;[0m&amp#27;[32m&amp#27;[1m"/ingredients/Tomato"&amp#27;[0m         &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iSendADELETERequestTo(java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mI should receive a &amp#27;[0m&amp#27;[32m&amp#27;[1m204&amp#27;[0m&amp#27;[32m response&amp#27;[0m                          &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iShouldReceiveAResponse(int)&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0 where ie1_0.name=?
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mthe ingredient &amp#27;[0m&amp#27;[32m&amp#27;[1m"Tomato"&amp#27;[0m&amp#27;[32m should be deleted from the system&amp#27;[0m &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theIngredientShouldBeDeletedFromTheSystem(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Delete a non-existing ingredient" classname="Delete an ingredient" time="0.015">
    <system-out><![CDATA[
@error
Scenario: Delete a non-existing ingredient                                                                        &amp#27;[90m# src/test/java/resources/features/delete_ingredient.feature:13&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0
Hibernate: insert into app_ingredient (added_by,calorie_number,category,name) values (?,?,?,?)
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0 where ie1_0.name=?
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe system is initialized&amp#27;[0m                                                                                 &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theSystemIsInitialized()&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0 where ie1_0.name=?
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI send a DELETE request to &amp#27;[0m&amp#27;[32m&amp#27;[1m"/ingredients/NonExistingIngredient"&amp#27;[0m                                            &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iSendADELETERequestTo(java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mI should receive a &amp#27;[0m&amp#27;[32m&amp#27;[1m404&amp#27;[0m&amp#27;[32m response&amp#27;[0m                                                                            &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iShouldReceiveAResponse(int)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mthe response should contain error message &amp#27;[0m&amp#27;[32m&amp#27;[1m"Ingredient not found for ingredient name: NonExistingIngredient"&amp#27;[0m &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theResponseShouldContainErrorMessage(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Successfully retrieve all ingredients when list is empty" classname="Get all ingredients" time="0.023">
    <system-out><![CDATA[
@getAll
Scenario: Successfully retrieve all ingredients when list is empty &amp#27;[90m# src/test/java/resources/features/get_all_ingredients.feature:4&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0
Hibernate: delete from app_ingredient where id=?
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe ingredient list is empty&amp#27;[0m                               &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theIngredientListIsEmpty()&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI send a GET request to &amp#27;[0m&amp#27;[32m&amp#27;[1m"/ingredients"&amp#27;[0m                      &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iSendAGETRequestTo(java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mI should receive a &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m&amp#27;[32m response&amp#27;[0m                             &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iShouldReceiveAResponse(int)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mthe response should contain an empty list&amp#27;[0m                    &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theResponseShouldContainAnEmptyList()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Successfully retrieve all ingredients when list has one ingredient #1" classname="Get all ingredients" time="0.021">
    <system-out><![CDATA[
@getAll
Scenario Outline: Successfully retrieve all ingredients when list has one ingredient                             &amp#27;[90m# src/test/java/resources/features/get_all_ingredients.feature:19&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0
Hibernate: insert into app_ingredient (added_by,calorie_number,category,name) values (?,?,?,?)
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe ingredient list contains &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m ingredient&amp#27;[0m                                                                &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theIngredientListContainsIngredient(int)&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI send a GET request to &amp#27;[0m&amp#27;[32m&amp#27;[1m"/ingredients"&amp#27;[0m                                                                    &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iSendAGETRequestTo(java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mI should receive a &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m&amp#27;[32m response&amp#27;[0m                                                                           &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iShouldReceiveAResponse(int)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mthe response should contain &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m ingredient&amp#27;[0m                                                                   &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theResponseShouldContainNumberIngredient(int)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mthe response should be list of data as in JSON file &amp#27;[0m&amp#27;[32m&amp#27;[1m"/responses/get_all_ingredient_size_one_response.json"&amp#27;[0m &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theResponseShouldBeListOfDataAsInJSONFile(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Successfully retrieve all ingredients when list has one ingredient #2" classname="Get all ingredients" time="0.017">
    <system-out><![CDATA[
@getAll
Scenario Outline: Successfully retrieve all ingredients when list has one ingredient                             &amp#27;[90m# src/test/java/resources/features/get_all_ingredients.feature:20&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0
Hibernate: delete from app_ingredient where id=?
Hibernate: insert into app_ingredient (added_by,calorie_number,category,name) values (?,?,?,?)
Hibernate: insert into app_ingredient (added_by,calorie_number,category,name) values (?,?,?,?)
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe ingredient list contains &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m ingredient&amp#27;[0m                                                                &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theIngredientListContainsIngredient(int)&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI send a GET request to &amp#27;[0m&amp#27;[32m&amp#27;[1m"/ingredients"&amp#27;[0m                                                                    &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iSendAGETRequestTo(java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mI should receive a &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m&amp#27;[32m response&amp#27;[0m                                                                           &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iShouldReceiveAResponse(int)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mthe response should contain &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m ingredient&amp#27;[0m                                                                   &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theResponseShouldContainNumberIngredient(int)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mthe response should be list of data as in JSON file &amp#27;[0m&amp#27;[32m&amp#27;[1m"/responses/get_all_ingredient_size_two_response.json"&amp#27;[0m &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theResponseShouldBeListOfDataAsInJSONFile(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Successfully retrieve an ingredient by name" classname="Get an ingredient by name" time="0.016">
    <system-out><![CDATA[
@getByName
Scenario: Successfully retrieve an ingredient by name                                                                           &amp#27;[90m# src/test/java/resources/features/get_ingredient_by_name.feature:7&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0
Hibernate: delete from app_ingredient where id=?
Hibernate: delete from app_ingredient where id=?
Hibernate: insert into app_ingredient (added_by,calorie_number,category,name) values (?,?,?,?)
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0 where ie1_0.name=?
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe system is initialized&amp#27;[0m                                                                                               &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theSystemIsInitialized()&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0 where ie1_0.name=?
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI send a GET request to &amp#27;[0m&amp#27;[32m&amp#27;[1m"/ingredients/Tomato"&amp#27;[0m                                                                            &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iSendAGETRequestTo(java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mI should receive a &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m&amp#27;[32m response&amp#27;[0m                                                                                          &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iShouldReceiveAResponse(int)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mthe ingredient response should be like the ingredient data in JSON file &amp#27;[0m&amp#27;[32m&amp#27;[1m"/responses/get_ingredient_by_name_response.json"&amp#27;[0m &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theIngredientResponseShouldBeLikeTheIngredientDataInJsonFile(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Get a non-existing ingredient" classname="Get an ingredient by name" time="0.015">
    <system-out><![CDATA[
@error
Scenario: Get a non-existing ingredient                                                                           &amp#27;[90m# src/test/java/resources/features/get_ingredient_by_name.feature:13&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0
Hibernate: delete from app_ingredient where id=?
Hibernate: insert into app_ingredient (added_by,calorie_number,category,name) values (?,?,?,?)
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0 where ie1_0.name=?
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe system is initialized&amp#27;[0m                                                                                 &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theSystemIsInitialized()&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0 where ie1_0.name=?
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI send a GET request to &amp#27;[0m&amp#27;[32m&amp#27;[1m"/ingredients/NonExistingIngredient"&amp#27;[0m                                               &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iSendAGETRequestTo(java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mI should receive a &amp#27;[0m&amp#27;[32m&amp#27;[1m404&amp#27;[0m&amp#27;[32m response&amp#27;[0m                                                                            &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iShouldReceiveAResponse(int)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mthe response should contain error message &amp#27;[0m&amp#27;[32m&amp#27;[1m"Ingredient not found for ingredient name: NonExistingIngredient"&amp#27;[0m &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theResponseShouldContainErrorMessage(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Successfully update an ingredient" classname="Update an existing ingredient" time="0.019">
    <system-out><![CDATA[
@update
Scenario: Successfully update an ingredient                                                                                &amp#27;[90m# src/test/java/resources/features/update_ingredient.feature:7&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0
Hibernate: delete from app_ingredient where id=?
Hibernate: insert into app_ingredient (added_by,calorie_number,category,name) values (?,?,?,?)
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0 where ie1_0.name=?
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe system is initialized&amp#27;[0m                                                                                          &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theSystemIsInitialized()&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe ingredient data in JSON file &amp#27;[0m&amp#27;[32m&amp#27;[1m"/requests/update_ingredient_request.json"&amp#27;[0m                                        &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theIngredientDataInJsonFile(java.lang.String)&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0 where ie1_0.name=?
Hibernate: insert into app_ingredient (added_by,calorie_number,category,name) values (?,?,?,?)
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI send a PUT request to &amp#27;[0m&amp#27;[32m&amp#27;[1m"/ingredients/Tomato"&amp#27;[0m                                                                       &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iSendAPUTRequestTo(java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mI should receive a &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m&amp#27;[32m response&amp#27;[0m                                                                                     &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iShouldReceiveAResponse(int)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mthe ingredient response should be like the ingredient data in JSON file &amp#27;[0m&amp#27;[32m&amp#27;[1m"/responses/update_ingredient_response.json"&amp#27;[0m &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theIngredientResponseShouldBeLikeTheIngredientDataInJsonFile(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Update non-existing ingredient" classname="Update an existing ingredient" time="0.021">
    <system-out><![CDATA[
@error
Scenario: Update non-existing ingredient                                                                          &amp#27;[90m# src/test/java/resources/features/update_ingredient.feature:14&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0
Hibernate: delete from app_ingredient where id=?
Hibernate: delete from app_ingredient where id=?
Hibernate: insert into app_ingredient (added_by,calorie_number,category,name) values (?,?,?,?)
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0 where ie1_0.name=?
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe system is initialized&amp#27;[0m                                                                                 &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theSystemIsInitialized()&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe ingredient data in JSON file &amp#27;[0m&amp#27;[32m&amp#27;[1m"/requests/update_ingredient_request.json"&amp#27;[0m                               &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theIngredientDataInJsonFile(java.lang.String)&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0 where ie1_0.name=?
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI send a PUT request to &amp#27;[0m&amp#27;[32m&amp#27;[1m"/ingredients/NonExistingIngredient"&amp#27;[0m                                               &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iSendAPUTRequestTo(java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mI should receive a &amp#27;[0m&amp#27;[32m&amp#27;[1m404&amp#27;[0m&amp#27;[32m response&amp#27;[0m                                                                            &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iShouldReceiveAResponse(int)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mthe response should contain error message &amp#27;[0m&amp#27;[32m&amp#27;[1m"Ingredient not found for ingredient name: NonExistingIngredient"&amp#27;[0m &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theResponseShouldContainErrorMessage(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Update ingredient with missing calorie number" classname="Update an existing ingredient" time="0.017">
    <system-out><![CDATA[
@error
Scenario: Update ingredient with missing calorie number                                              &amp#27;[90m# src/test/java/resources/features/update_ingredient.feature:21&amp#27;[0m
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0
Hibernate: delete from app_ingredient where id=?
Hibernate: insert into app_ingredient (added_by,calorie_number,category,name) values (?,?,?,?)
Hibernate: select ie1_0.id,ie1_0.added_by,ie1_0.calorie_number,ie1_0.category,ie1_0.name from app_ingredient ie1_0 where ie1_0.name=?
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe system is initialized&amp#27;[0m                                                                    &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theSystemIsInitialized()&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe ingredient data in JSON file &amp#27;[0m&amp#27;[32m&amp#27;[1m"/requests/update_ingredient_request_missing_calories.json"&amp#27;[0m &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theIngredientDataInJsonFile(java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI send a PUT request to &amp#27;[0m&amp#27;[32m&amp#27;[1m"/ingredients/Tomato"&amp#27;[0m                                                 &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iSendAPUTRequestTo(java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mI should receive a &amp#27;[0m&amp#27;[32m&amp#27;[1m400&amp#27;[0m&amp#27;[32m response&amp#27;[0m                                                               &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.iShouldReceiveAResponse(int)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mthe response should contain error message &amp#27;[0m&amp#27;[32m&amp#27;[1m"Calorie number needs to be positive value"&amp#27;[0m          &amp#27;[90m# com.ingredients_service.cucumber.glue.IngredientStepDefs.theResponseShouldContainErrorMessage(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
</testsuite>